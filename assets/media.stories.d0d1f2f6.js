var i=Object.defineProperty;var n=(t,e)=>i(t,"name",{value:e,configurable:!0});import"./jsx-runtime.404cc3c2.js";import{c as o,A as d,M as c}from"./Props.f81c2ba1.js";import"./iframe.54a927e4.js";import{m as u}from"./index.45ccd012.js";import{T as l}from"./index.3530d16f.js";import"./string.ad2d61e6.js";import"./es.map.constructor.cd7f33e6.js";import"./es.number.to-fixed.4ede2407.js";/* empty css               */function m(){return m=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(t[s]=a[s])}return t},m.apply(this,arguments)}n(m,"_extends");const y={},M="wrapper";function p({components:t,...e}){return o(M,m({},y,e,{components:t,mdxType:"MDXLayout"}),o(c,{title:"Tokens/Media Queries",mdxType:"Meta"}),o("h1",null,"Media Queries"),o(l,{tokens:u,mdxType:"TokensGrid"}))}n(p,"MDXContent");p.isMDXComponent=!0;const f=n(()=>{throw new Error("Docs-only story")},"__page");f.parameters={docsOnly:!0};const r={title:"Tokens/Media Queries",includeStories:["__page"]},x={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>o(d,{mdxStoryNameToKey:x,mdxComponentAnnotations:r},o(p,null))};const j=["__page"];export{j as __namedExportsOrder,f as __page,r as default};
//# sourceMappingURL=media.stories.d0d1f2f6.js.map
